
 Network gustavo-miranda_rinha-network  Creating
 Network gustavo-miranda_rinha-network  Created
 Container rinha_redis  Creating
 Container rinha_db  Creating
 Container rinha_redis  Created
 Container rinha_db  Created
 Container rinha_api02  Creating
 Container rinha_api01  Creating
 Container rinha_api01  Created
 Container rinha_api02  Created
 Container rinha_nginx  Creating
 Container rinha_nginx  Created
Attaching to rinha_api01, rinha_api02, rinha_db, rinha_nginx, rinha_redis
rinha_db     | The files belonging to this database system will be owned by user "postgres".
rinha_db     | This user must also own the server process.
rinha_db     | 
rinha_db     | The database cluster will be initialized with locale "en_US.utf8".
rinha_db     | The default database encoding has accordingly been set to "UTF8".
rinha_db     | The default text search configuration will be set to "english".
rinha_db     | 
rinha_db     | Data page checksums are disabled.
rinha_db     | 
rinha_db     | fixing permissions on existing directory /var/lib/postgresql/data ... ok
rinha_db     | creating subdirectories ... ok
rinha_db     | selecting dynamic shared memory implementation ... posix
rinha_db     | selecting default "max_connections" ... 100
rinha_db     | selecting default "shared_buffers" ... 128MB
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_db     | selecting default time zone ... UTC
rinha_db     | creating configuration files ... ok
rinha_db     | running bootstrap script ... ok
[Krinha_redis exited with code 0
rinha_db     | sh: locale: not found
rinha_db     | 2025-08-08 00:02:25.915 UTC [35] WARNING:  no usable system locales were found
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
[Krinha_redis exited with code 1
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
[Krinha_redis exited with code 1
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
[Krinha_redis exited with code 1
rinha_db     | performing post-bootstrap initialization ... ok
rinha_db     | syncing data to disk ... ok
rinha_db     | 
rinha_db     | 
rinha_db     | Success. You can now start the database server using:
rinha_db     | 
rinha_db     |     pg_ctl -D /var/lib/postgresql/data -l logfile start
rinha_db     | 
rinha_db     | initdb: warning: enabling "trust" authentication for local connections
rinha_db     | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run initdb.
rinha_db     | waiting for server to start....2025-08-08 00:02:28.506 UTC [41] LOG:  starting PostgreSQL 17.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
rinha_db     | 2025-08-08 00:02:28.506 UTC [41] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
rinha_db     | 2025-08-08 00:02:28.509 UTC [44] LOG:  database system was shut down at 2025-08-08 00:02:28 UTC
rinha_db     | 2025-08-08 00:02:28.513 UTC [41] LOG:  database system is ready to accept connections
rinha_db     |  done
rinha_db     | server started
rinha_db     | 2025-08-08 00:02:28.907 UTC [58] FATAL:  database "rinha" does not exist
rinha_db     | CREATE DATABASE
rinha_db     | 
rinha_db     | 
rinha_db     | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/init.sql
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
[Krinha_redis exited with code 1
rinha_db     | CREATE TABLE
rinha_db     | CREATE INDEX
rinha_db     | CREATE INDEX
rinha_db     | CREATE INDEX
rinha_db     | CREATE INDEX
rinha_db     | 
rinha_db     | 
rinha_db     | waiting for server to shut down....2025-08-08 00:02:29.119 UTC [41] LOG:  received fast shutdown request
rinha_db     | 2025-08-08 00:02:29.119 UTC [41] LOG:  aborting any active transactions
rinha_db     | 2025-08-08 00:02:29.122 UTC [41] LOG:  background worker "logical replication launcher" (PID 46) exited with exit code 1
rinha_db     | 2025-08-08 00:02:29.199 UTC [42] LOG:  shutting down
rinha_db     | 2025-08-08 00:02:29.199 UTC [42] LOG:  checkpoint starting: shutdown immediate
rinha_db     | 2025-08-08 00:02:29.220 UTC [42] LOG:  checkpoint complete: wrote 932 buffers (30.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.021 s, sync=0.001 s, total=0.022 s; sync files=0, longest=0.000 s, average=0.000 s; distance=7470 kB, estimate=7470 kB; lsn=0/1C38BA0, redo lsn=0/1C38BA0
rinha_db     | 2025-08-08 00:02:29.299 UTC [41] LOG:  database system is shut down
rinha_db     |  done
rinha_db     | server stopped
rinha_db     | 
rinha_db     | PostgreSQL init process complete; ready for start up.
rinha_db     | 
rinha_db     | 2025-08-08 00:02:29.347 UTC [1] LOG:  starting PostgreSQL 17.5 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
rinha_db     | 2025-08-08 00:02:29.347 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
rinha_db     | 2025-08-08 00:02:29.347 UTC [1] LOG:  listening on IPv6 address "::", port 5432
rinha_db     | 2025-08-08 00:02:29.347 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
rinha_db     | 2025-08-08 00:02:29.349 UTC [65] LOG:  database system was shut down at 2025-08-08 00:02:29 UTC
rinha_db     | 2025-08-08 00:02:29.482 UTC [1] LOG:  database system is ready to accept connections
rinha_api02  | info: RinhaBackend.API.Services.PaymentBackgroundService[0]
rinha_api01  | info: RinhaBackend.API.Services.PaymentBackgroundService[0]
rinha_api02  |       Payment Background Service is started
rinha_api01  |       Payment Background Service is started
rinha_api01  | info: Microsoft.Hosting.Lifetime[14]
rinha_api01  |       Now listening on: http://[::]:8080
rinha_api01  | info: Microsoft.Hosting.Lifetime[0]
rinha_api01  |       Application started. Press Ctrl+C to shut down.
rinha_api02  | info: Microsoft.Hosting.Lifetime[14]
rinha_api01  | info: Microsoft.Hosting.Lifetime[0]
rinha_api02  |       Now listening on: http://[::]:8080
rinha_api02  | info: Microsoft.Hosting.Lifetime[0]
rinha_api02  |       Application started. Press Ctrl+C to shut down.
rinha_api02  | info: Microsoft.Hosting.Lifetime[0]
rinha_api02  |       Hosting environment: Production
rinha_api02  | info: Microsoft.Hosting.Lifetime[0]
rinha_api02  |       Content root path: /app
rinha_api01  |       Hosting environment: Production
rinha_api01  | info: Microsoft.Hosting.Lifetime[0]
rinha_api01  |       Content root path: /app
rinha_nginx  | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
rinha_nginx  | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
rinha_nginx  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
rinha_nginx  | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
rinha_nginx  | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
rinha_nginx  | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
rinha_nginx  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
rinha_nginx  | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
rinha_nginx  | /docker-entrypoint.sh: Configuration complete; ready for start up
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
[Krinha_redis exited with code 1
rinha_api01  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api01  |       Connection id "0HNEM1RFIDCSO", Request id "0HNEM1RFIDCSO:00000001": An unhandled exception was thrown by the application.
rinha_api01  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api01  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api01  |       --- End of stack trace from previous location ---
rinha_api01  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
[Krinha_redis exited with code 1
rinha_api02  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api02  |       Connection id "0HNEM1RH43HJI", Request id "0HNEM1RH43HJI:00000001": An unhandled exception was thrown by the application.
rinha_api02  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api02  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api02  |       --- End of stack trace from previous location ---
rinha_api02  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
[Krinha_redis exited with code 1
rinha_api01  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api01  |       Connection id "0HNEM1RFIDCSO", Request id "0HNEM1RFIDCSO:00000002": An unhandled exception was thrown by the application.
rinha_api01  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api01  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api01  |       --- End of stack trace from previous location ---
rinha_api01  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_api02  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api02  |       Connection id "0HNEM1RH43HJI", Request id "0HNEM1RH43HJI:00000002": An unhandled exception was thrown by the application.
rinha_api02  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api02  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api02  |       --- End of stack trace from previous location ---
rinha_api02  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_api01  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api01  |       Connection id "0HNEM1RFIDCSO", Request id "0HNEM1RFIDCSO:00000003": An unhandled exception was thrown by the application.
rinha_api01  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api01  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api01  |       --- End of stack trace from previous location ---
rinha_api01  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
[Krinha_redis exited with code 1
rinha_api02  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api02  |       Connection id "0HNEM1RH43HJI", Request id "0HNEM1RH43HJI:00000003": An unhandled exception was thrown by the application.
rinha_api02  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api02  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api02  |       --- End of stack trace from previous location ---
rinha_api02  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_api01  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api01  |       Connection id "0HNEM1RFIDCSO", Request id "0HNEM1RFIDCSO:00000004": An unhandled exception was thrown by the application.
rinha_api01  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api01  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api01  |       --- End of stack trace from previous location ---
rinha_api01  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_api02  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api02  |       Connection id "0HNEM1RH43HJI", Request id "0HNEM1RH43HJI:00000004": An unhandled exception was thrown by the application.
rinha_api02  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api02  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api02  |       --- End of stack trace from previous location ---
rinha_api02  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_api01  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api01  |       Connection id "0HNEM1RFIDCSO", Request id "0HNEM1RFIDCSO:00000005": An unhandled exception was thrown by the application.
rinha_api01  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api01  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api01  |       --- End of stack trace from previous location ---
rinha_api01  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_api02  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api02  |       Connection id "0HNEM1RH43HJI", Request id "0HNEM1RH43HJI:00000005": An unhandled exception was thrown by the application.
rinha_api02  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api02  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api02  |       --- End of stack trace from previous location ---
rinha_api02  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
rinha_redis  | 
rinha_redis  | *** FATAL CONFIG FILE ERROR (Redis 7.4.5) ***
rinha_redis  | Reading the configuration file, at line 10
rinha_redis  | >>> 'maxclientes "1000"'
rinha_redis  | Bad directive or wrong number of arguments
[Krinha_redis exited with code 1
rinha_api01  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api01  |       Connection id "0HNEM1RFIDCSO", Request id "0HNEM1RFIDCSO:00000006": An unhandled exception was thrown by the application.
rinha_api01  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api01  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api01  |       --- End of stack trace from previous location ---
rinha_api01  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_api02  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api02  |       Connection id "0HNEM1RH43HJI", Request id "0HNEM1RH43HJI:00000006": An unhandled exception was thrown by the application.
rinha_api02  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api02  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api02  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api02  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api02  |       --- End of stack trace from previous location ---
rinha_api02  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
rinha_api01  | fail: Microsoft.AspNetCore.Server.Kestrel[13]
rinha_api01  |       Connection id "0HNEM1RFIDCSO", Request id "0HNEM1RFIDCSO:00000007": An unhandled exception was thrown by the application.
rinha_api01  |       StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions, TextWriter, Nullable`1, EndPointCollection) + 0x32c
rinha_api01  |          at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions, TextWriter) + 0x5d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite, RuntimeResolverContext) + 0xf
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite, RuntimeResolverContext) + 0x64
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0xa9
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite, RuntimeResolverContext) + 0x79
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite, RuntimeResolverContext, ServiceProviderEngineScope, RuntimeResolverLock) + 0xca
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite, RuntimeResolverContext) + 0x22
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite, TArgument) + 0x95
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite, ServiceProviderEngineScope) + 0x1c
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(ServiceIdentifier, ServiceProviderEngineScope) + 0x9e
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type) + 0x2d
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider, Type) + 0x41
rinha_api01  |          at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider) + 0x2f
rinha_api01  |          at Microsoft.AspNetCore.Http.Generated.<GeneratedRouteBuilderExtensions_g>FA44B49C0DE779CF9E3520069E434B358B9A4C77CF37D1A5FD97A80C9C5A80130__GeneratedRouteBuilderExtensionsCore.<>c__DisplayClass4_0.<<MapGet1>g__RequestHandler|5>d.MoveNext() + 0x1a9
rinha_api01  |       --- End of stack trace from previous location ---
rinha_api01  |          at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.<ProcessRequests>d__238`1.MoveNext() + 0x360
[Krinha_nginx exited with code 0
rinha_api01  | info: Microsoft.Hosting.Lifetime[0]
rinha_api01  |       Application is shutting down...
rinha_api01  | info: RinhaBackend.API.Services.PaymentBackgroundService[0]
rinha_api01  |       Payment Background Service is stopping
rinha_api02  | info: Microsoft.Hosting.Lifetime[0]
rinha_api02  |       Application is shutting down...
rinha_api02  | info: RinhaBackend.API.Services.PaymentBackgroundService[0]
rinha_api02  |       Payment Background Service is stopping
rinha_api02  | fail: RinhaBackend.API.Services.PaymentBackgroundService[0]
rinha_api02  |       Payment Background Service encountered an error
rinha_api02  |       System.OperationCanceledException: The operation was canceled.
rinha_api02  |          at System.Threading.Channels.AsyncOperation`1.GetResult(Int16) + 0x4f
rinha_api02  |          at RinhaBackend.API.Services.BackgroundTaskQueue.<DequeueAsync>d__3.MoveNext() + 0x14e
rinha_api02  |       --- End of stack trace from previous location ---
rinha_api02  |          at RinhaBackend.API.Services.PaymentBackgroundService.<ExecuteAsync>d__4.MoveNext() + 0x25b
rinha_api01  | fail: RinhaBackend.API.Services.PaymentBackgroundService[0]
rinha_api01  |       Payment Background Service encountered an error
rinha_api01  |       System.OperationCanceledException: The operation was canceled.
rinha_api01  |          at System.Threading.Channels.AsyncOperation`1.GetResult(Int16) + 0x4f
rinha_api01  |          at RinhaBackend.API.Services.BackgroundTaskQueue.<DequeueAsync>d__3.MoveNext() + 0x14e
rinha_api01  |       --- End of stack trace from previous location ---
rinha_api01  |          at RinhaBackend.API.Services.PaymentBackgroundService.<ExecuteAsync>d__4.MoveNext() + 0x25b
[Krinha_api02 exited with code 0
[Krinha_api01 exited with code 0
rinha_db     | 2025-08-08 00:03:38.755 UTC [1] LOG:  received fast shutdown request
rinha_db     | 2025-08-08 00:03:38.755 UTC [1] LOG:  aborting any active transactions
rinha_db     | 2025-08-08 00:03:38.758 UTC [1] LOG:  background worker "logical replication launcher" (PID 67) exited with exit code 1
rinha_db     | 2025-08-08 00:03:38.759 UTC [63] LOG:  shutting down
rinha_db     | 2025-08-08 00:03:38.759 UTC [63] LOG:  checkpoint starting: shutdown immediate
rinha_db     | 2025-08-08 00:03:38.760 UTC [63] LOG:  checkpoint complete: wrote 8 buffers (0.3%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.001 s, sync=0.001 s, total=0.001 s; sync files=0, longest=0.000 s, average=0.000 s; distance=0 kB, estimate=0 kB; lsn=0/1C38C18, redo lsn=0/1C38C18
rinha_db     | 2025-08-08 00:03:38.764 UTC [1] LOG:  database system is shut down
[Krinha_db exited with code 0
